{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "14307959865254204887"
    }
  },
  "parameters": {
    "azureActiveDirectoryObjectID": {
      "type": "string",
      "metadata": {
        "description": "Please enter your Azure AD Object ID. This can be found by locating your profile within Azure Portal > Azure Active Directory > Users."
      }
    },
    "servicePrincipalClientID": {
      "type": "string",
      "metadata": {
        "description": "Please enter your Service Principal Client ID. PowerShell: $(Get-AzureADServicePrincipal -Filter \"DisplayName eq 'YOUR_SERVICE_PRINCIPAL_NAME'\").AppId"
      }
    },
    "servicePrincipalClientSecret": {
      "type": "secureString",
      "metadata": {
        "description": "Please enter your Service Principal Client Secret."
      }
    },
    "sqlServerAdminLogin": {
      "type": "string",
      "defaultValue": "sqladmin",
      "metadata": {
        "description": "Please specify a login name for the Azure SQL Server administrator. Default value: sqladmin."
      }
    },
    "sqlServerAdminPassword": {
      "type": "secureString",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Please specify a password for the Azure SQL Server administrator. Default value: newGuid()."
      }
    },
    "suffix": {
      "type": "string"
    }
  },
  "functions": [],
  "variables": {
    "location": "[resourceGroup().location]",
    "tenantId": "[subscription().tenantId]",
    "subscriptionId": "[subscription().subscriptionId]",
    "rg": "[resourceGroup().name]",
    "sqlSecretName": "sql-secret",
    "rdPrefix": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions', variables('subscriptionId'))]",
    "role": {
      "PurviewDataCurator": "[format('{0}/8a3c2885-9b38-4fd2-9d99-91af537c1347', variables('rdPrefix'))]",
      "PurviewDataReader": "[format('{0}/ff100721-1b9d-43d8-af52-42b69c1272db', variables('rdPrefix'))]",
      "PurviewDataSourceAdministrator": "[format('{0}/200bba9e-f0c8-430f-892b-6f0794863803', variables('rdPrefix'))]",
      "StorageBlobDataReader": "[format('{0}/2a2b9908-6ea1-4ae2-8e65-a410df84e7d1', variables('rdPrefix'))]",
      "StorageBlobDataContributor": "[format('{0}/ba92f5b4-2d11-453d-a403-e96b0029c9fe', variables('rdPrefix'))]",
      "Contributor": "[format('{0}/b24988ac-6180-42a0-ab88-20f7382dd24c', variables('rdPrefix'))]",
      "UserAccessAdministrator": "[format('{0}/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9', variables('rdPrefix'))]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}', format('pvdemo{0}-sqlsvr', parameters('suffix')), 'allowAzure')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', format('pvdemo{0}-sqlsvr', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}', format('pvdemo{0}-sqlsvr', parameters('suffix')), 'allowAll')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', format('pvdemo{0}-sqlsvr', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-04-01-preview",
      "name": "[format('{0}/{1}', format('pvdemo{0}-keyvault', parameters('suffix')), variables('sqlSecretName'))]",
      "properties": {
        "value": "[parameters('sqlServerAdminPassword')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('pvdemo{0}-keyvault', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/{1}/{2}', format('pvdemo{0}adls', parameters('suffix')), 'default', 'bing')]",
      "properties": {
        "publicAccess": "Blob"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}adls', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.DataFactory/factories/linkedservices",
      "apiVersion": "2018-06-01",
      "name": "[format('{0}/{1}', format('pvdemo{0}-adf', parameters('suffix')), 'AzureDataLakeStorageLinkedService')]",
      "properties": {
        "type": "AzureBlobFS",
        "typeProperties": {
          "url": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}adls', parameters('suffix')))).primaryEndpoints.dfs]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', format('pvdemo{0}-adf', parameters('suffix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}adls', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "name": "[format('{0}/{1}', format('pvdemo{0}-adf', parameters('suffix')), 'SourceDataset_a9c')]",
      "properties": {
        "linkedServiceName": {
          "referenceName": "AzureDataLakeStorageLinkedService",
          "type": "LinkedServiceReference"
        },
        "type": "DelimitedText",
        "typeProperties": {
          "location": {
            "type": "AzureBlobFSLocation",
            "folderPath": "data/2020",
            "fileSystem": "bing"
          },
          "columnDelimiter": "\t",
          "rowDelimiter": "\n",
          "escapeChar": "\\",
          "firstRowAsHeader": true,
          "quoteChar": "\""
        },
        "schema": [
          {
            "name": "Date",
            "type": "String"
          },
          {
            "name": "Query",
            "type": "String"
          },
          {
            "name": "IsImplicitIntent",
            "type": "String"
          },
          {
            "name": "Country",
            "type": "String"
          },
          {
            "name": "PopularityScore",
            "type": "String"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', format('pvdemo{0}-adf', parameters('suffix')))]",
        "[resourceId('Microsoft.DataFactory/factories/linkedservices', format('pvdemo{0}-adf', parameters('suffix')), 'AzureDataLakeStorageLinkedService')]"
      ]
    },
    {
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "name": "[format('{0}/{1}', format('pvdemo{0}-adf', parameters('suffix')), 'SourceDestination_a9c')]",
      "properties": {
        "linkedServiceName": {
          "referenceName": "AzureDataLakeStorageLinkedService",
          "type": "LinkedServiceReference"
        },
        "type": "Parquet",
        "typeProperties": {
          "location": {
            "type": "AzureBlobFSLocation",
            "fileName": "merged.parquet",
            "folderPath": "data",
            "fileSystem": "bing"
          },
          "compressionCodec": "snappy"
        },
        "schema": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', format('pvdemo{0}-adf', parameters('suffix')))]",
        "[resourceId('Microsoft.DataFactory/factories/linkedservices', format('pvdemo{0}-adf', parameters('suffix')), 'AzureDataLakeStorageLinkedService')]"
      ]
    },
    {
      "type": "Microsoft.DataFactory/factories/pipelines",
      "apiVersion": "2018-06-01",
      "name": "[format('{0}/{1}', format('pvdemo{0}-adf', parameters('suffix')), 'copyPipeline')]",
      "properties": {
        "activities": [
          {
            "name": "Copy_a9c",
            "type": "Copy",
            "dependsOn": [],
            "typeProperties": {
              "source": {
                "type": "DelimitedTextSource",
                "storeSettings": {
                  "type": "AzureBlobFSReadSettings",
                  "recursive": true,
                  "wildcardFileName": "*",
                  "enablePartitionDiscovery": false
                },
                "formatSettings": {
                  "type": "DelimitedTextReadSettings",
                  "skipLineCount": 0
                }
              },
              "sink": {
                "type": "ParquetSink",
                "storeSettings": {
                  "type": "AzureBlobFSWriteSettings",
                  "copyBehavior": "MergeFiles"
                },
                "formatSettings": {
                  "type": "ParquetWriteSettings"
                }
              },
              "enableStaging": false,
              "validateDataConsistency": false
            },
            "inputs": [
              {
                "referenceName": "SourceDataset_a9c",
                "type": "DatasetReference"
              }
            ],
            "outputs": [
              {
                "referenceName": "SourceDestination_a9c",
                "type": "DatasetReference"
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', format('pvdemo{0}-adf', parameters('suffix')))]",
        "[resourceId('Microsoft.DataFactory/factories/datasets', format('pvdemo{0}-adf', parameters('suffix')), 'SourceDestination_a9c')]",
        "[resourceId('Microsoft.DataFactory/factories/datasets', format('pvdemo{0}-adf', parameters('suffix')), 'SourceDataset_a9c')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/{1}/{2}', format('pvdemo{0}synapsedl', parameters('suffix')), 'default', format('synapsefs{0}', parameters('suffix')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('pvdemo{0}synapsedl', parameters('suffix')), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}synapsedl', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/{1}', format('pvdemo{0}synapsedl', parameters('suffix')), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}synapsedl', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Synapse/workspaces/firewallRules",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}/{1}', format('pvdemo{0}-synapse', parameters('suffix')), 'allowAll')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', format('pvdemo{0}-synapse', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('pvdemo{0}-sqlsvr', parameters('suffix'))]",
      "location": "[variables('location')]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqlServerAdminPassword')]"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}', format('pvdemo{0}-sqlsvr', parameters('suffix')), format('pvdemo{0}-sqldb', parameters('suffix')))]",
      "location": "[variables('location')]",
      "sku": {
        "name": "GP_S_Gen5",
        "tier": "GeneralPurpose",
        "family": "Gen5",
        "capacity": 1
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "autoPauseDelay": 60,
        "requestedBackupStorageRedundancy": "Local",
        "sampleName": "AdventureWorksLT"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', format('pvdemo{0}-sqlsvr', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-04-01-preview",
      "name": "[format('pvdemo{0}-keyvault', parameters('suffix'))]",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "enableSoftDelete": false,
        "tenantId": "[variables('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[variables('tenantId')]",
            "objectId": "[parameters('azureActiveDirectoryObjectID')]",
            "permissions": {
              "secrets": [
                "get",
                "list",
                "set",
                "delete",
                "recover",
                "backup",
                "restore"
              ]
            }
          },
          {
            "tenantId": "[variables('tenantId')]",
            "objectId": "[reference(resourceId('Microsoft.Purview/accounts', format('pvdemo{0}-pv', parameters('suffix'))), '2020-12-01-preview', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[format('pvdemo{0}adls', parameters('suffix'))]",
      "location": "[variables('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "isHnsEnabled": true
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "configDeployer",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.DataFactory/factories",
      "apiVersion": "2018-06-01",
      "name": "[format('pvdemo{0}-adf', parameters('suffix'))]",
      "location": "[variables('location')]",
      "properties": {
        "publicNetworkAccess": "Enabled",
        "purviewConfiguration": {
          "purviewResourceId": "[resourceId('Microsoft.Purview/accounts', format('pvdemo{0}-pv', parameters('suffix')))]"
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "catalogUri": "[format('{0}.catalog.purview.azure.com', format('pvdemo{0}-pv', parameters('suffix')))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[format('pvdemo{0}synapsedl', parameters('suffix'))]",
      "location": "[variables('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2021-05-01",
      "name": "[format('pvdemo{0}-synapse', parameters('suffix'))]",
      "location": "[variables('location')]",
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[reference(format('pvdemo{0}synapsedl', parameters('suffix'))).primaryEndpoints.dfs]",
          "filesystem": "[format('synapsefs{0}', parameters('suffix'))]"
        },
        "purviewConfiguration": {
          "purviewResourceId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Purview/accounts/{2}', variables('subscriptionId'), variables('rg'), format('pvdemo{0}-pv', parameters('suffix')))]"
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}synapsedl', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('pvdemo{0}adls', parameters('suffix')))]",
      "name": "[guid(format('ra03{0}', variables('rg')))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Purview/accounts', format('pvdemo{0}-pv', parameters('suffix'))), '2020-12-01-preview', 'full').identity.principalId]",
        "roleDefinitionId": "[variables('role').StorageBlobDataReader]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}adls', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "name": "[guid(format('ra04{0}', variables('rg')))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'configDeployer')).principalId]",
        "roleDefinitionId": "[variables('role').Contributor]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'configDeployer')]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('pvdemo{0}adls', parameters('suffix')))]",
      "name": "[guid(format('ra07{0}', variables('rg')))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.DataFactory/factories', format('pvdemo{0}-adf', parameters('suffix'))), '2018-06-01', 'full').identity.principalId]",
        "roleDefinitionId": "[variables('role').StorageBlobDataContributor]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', format('pvdemo{0}-adf', parameters('suffix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}adls', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('pvdemo{0}synapsedl', parameters('suffix')))]",
      "name": "[guid(format('ra08{0}', variables('rg')))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', format('pvdemo{0}-synapse', parameters('suffix'))), '2021-05-01', 'full').identity.principalId]",
        "roleDefinitionId": "[variables('role').StorageBlobDataContributor]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', format('pvdemo{0}-synapse', parameters('suffix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}synapsedl', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('pvdemo{0}adls', parameters('suffix')))]",
      "name": "[guid(format('ra09{0}', variables('rg')))]",
      "properties": {
        "principalId": "[parameters('azureActiveDirectoryObjectID')]",
        "roleDefinitionId": "[variables('role').StorageBlobDataReader]",
        "principalType": "User"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}adls', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "script",
      "location": "[variables('location')]",
      "kind": "AzurePowerShell",
      "properties": {
        "azPowerShellVersion": "3.0",
        "arguments": "[format('-tenant_id {0} -user_id {1} -client_id {2} -client_secret {3} -purview_account {4} -vault_uri {5} -admin_login {6} -sql_secret_name {7} -subscription_id {8} -resource_group {9} -location {10} -sql_server_name {11} -sql_db_name {12} -storage_account_name {13} -adf_name {14} -adf_principal_id {15} -adf_pipeline_name {16} -managed_identity {17}', variables('tenantId'), parameters('azureActiveDirectoryObjectID'), parameters('servicePrincipalClientID'), parameters('servicePrincipalClientSecret'), format('pvdemo{0}-pv', parameters('suffix')), reference(resourceId('Microsoft.KeyVault/vaults', format('pvdemo{0}-keyvault', parameters('suffix')))).vaultUri, parameters('sqlServerAdminLogin'), variables('sqlSecretName'), variables('subscriptionId'), variables('rg'), variables('location'), format('pvdemo{0}-sqlsvr', parameters('suffix')), format('pvdemo{0}-sqldb', parameters('suffix')), format('pvdemo{0}adls', parameters('suffix')), format('pvdemo{0}-adf', parameters('suffix')), reference(resourceId('Microsoft.DataFactory/factories', format('pvdemo{0}-adf', parameters('suffix'))), '2018-06-01', 'full').identity.principalId, 'copyPipeline', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'configDeployer')).principalId)]",
        "primaryScriptUri": "https://raw.githubusercontent.com/k14i/purviewdemo/main/scripts/postDeploymentScript.ps1",
        "forceUpdateTag": "[guid(resourceGroup().id)]",
        "retentionInterval": "PT4H"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'configDeployer')]": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', format('pvdemo{0}-adf', parameters('suffix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('pvdemo{0}adls', parameters('suffix')))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('pvdemo{0}-keyvault', parameters('suffix')))]",
        "[resourceId('Microsoft.DataFactory/factories/pipelines', format('pvdemo{0}-adf', parameters('suffix')), 'copyPipeline')]",
        "[resourceId('Microsoft.Authorization/roleAssignments', guid(format('ra04{0}', variables('rg'))))]",
        "[resourceId('Microsoft.Sql/servers/databases', format('pvdemo{0}-sqlsvr', parameters('suffix')), format('pvdemo{0}-sqldb', parameters('suffix')))]",
        "[resourceId('Microsoft.Sql/servers', format('pvdemo{0}-sqlsvr', parameters('suffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'configDeployer')]"
      ]
    }
  ]
}